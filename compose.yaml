include:
  - include/redis.yaml
#  - include/manticore.yaml
  
services:
  server:
    container_name: pydev
    volumes:
      - ./${PROJECT}:/home/$USER/${PROJECT}
      - ./data/.bash_history:/home/$USER/.bash_history
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        USER_ID: $UID
        USER_NAME: $USER
        PYTHON_VERSION: $PYTHON_VERSION
        IMAGE: ubuntu:24.04
        PROJECT: ${PROJECT}
    ports:
      - 8000:8000
      - 5678:5678 # for debugpy
#    pid: host
#networks:
#  public:
#  private:
# TODO db rabbitmq celery frontend
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

