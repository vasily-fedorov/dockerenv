include:
  - include/postgresql.yaml
#  - include/redis.yaml
#  - include/manticore.yaml
# ...other services

services:
  server:
    command: $CMD # bash # sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    container_name: dockerenv
    volumes:
      - ../:/home/$USER/src
      - ~/tmp/data/.bash_history:/home/$USER/.bash_history
    build:
      context: ../
      dockerfile: ./dockerenv/Dockerfile
      args:
        USER_ID: $UID
        USER_NAME: $USER
        PYTHON_VERSION: $PYTHON_VERSION
        IMAGE: $IMAGE
        BUILD_SH: $BUILD_SH
    stdin_open: true # docker run -i
    tty: true # docker run -t
    ports:
      - 8000:8000
      - 5678:5678
#    depends_on:
#      - postgresql
 #     - redis
 #     ...
# TODO db rabbitmq celery frontend

#   postgresql:
#     container_name: postgresql
#     image: docker.io/library/postgres
#     restart: always
#     volumes:
#       - ~/tmp/data/postgresql:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_HOST_AUTH_METHOD = trust
#       - POSTGRES_DB=db
#       - POSTGRES_USER=user
#       - POSTGRES_PASSWORD=password
#     ports:
#       - 8082:5432
#     shm_size: 128mb
#     # healthcheck:
#     #   test: [ "CMD", "pg_isready","-u","user" ]
#     #   interval: 10s
#     #   timeout: 5s
#     #   retries: 5
#   pgadmin:
#     container_name: pgadmin
#     image: docker.io/dpage/pgadmin4:latest
#     restart: always
#     environment:
#       PGADMIN_DEFAULT_EMAIL: no@no.no
#       PGADMIN_DEFAULT_PASSWORD: admin
#       PGADMIN_DISABLE_POSTFIX: yes
#       PGADMIN_LISTEN_ADDRESS: 0.0.0.0
#       PGADMIN_LISTEN_PORT: 80

#     ports:
#       - 8081:80
# #    volumes:
# #      - ./servers.json:/pgadmin4/servers.json
