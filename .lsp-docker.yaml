lsp:
  server:
    # 'lsp-docker' fields
  mappings:
    - source: "/your/host/source/path" # used both by 'lsp-docker' and 'dap-docker'
      destination: "/your/local/path/inside/a/container" # used both by 'lsp-docker' and 'dap-docker'
  debug:
    type: docker # only docker is supported
    subtype: image # or 'container'
    name: <docker image or container that has the debugger in> # you can omit this field
    # in this case the 'lsp-docker' ('server' section) image name is used
    enabled: true # you can explicitly disable 'dap-docker' by using 'false'
    provider: <your default language debug provider, double quoted string>
    template: <your default language debug template, double quoted string>
    launch_command: <an explicit command if you want to override a default one provided by the debug provider>
    # e.g. if you have installed a debug server in a different directory, not used with 'container' subtype debuggers
# # single server configuration
lsp:
  server:
    type: docker
    # subtype:
    # - "container": attach to an already running container
    # - "image": when image does not exist, try to build it based on the dockerfile found in the project-scope
    #   (see Automatic image building). An image might feature an optional tag, i.e. '<image>:<tag>'. If a
    #   tagless image is indicated 'latest' will be assumed.
    subtype: container
    # Image/container name to use for this language server.
    name: image-container-name
    # server id of a registered LSP server. You can find the list of registered servers evaluating:
    #
    # `(ht-keys lsp-clients)`
    #
    # source:
    # https://stackoverflow.com/questions/17066169/retrieve-keys-from-hash-table-sorted-by-the-values-efficiently
    server: server-id-of-the-base-server
    # an (optional) array of parameters (docker or podman) to launch the image with
    # initially intended to host the '--userns' parameter
    # NOTE: 'launch_parameters' are not used with 'container' subtype servers
    # in this case embed all required parameters when creating the server instead
    launch_parameters:
      - "--userns=nomap"
    # command to launch the language server in stdio mode
    # NOTE: 'launch_command' is not used with 'container' subtype servers as a command is embedded in a
    # container itself and serves as entrypoint
    launch_command: "launch command with arguments"
  mappings:
    # NOTE: the paths must be within the project this server is being build for
    - source: "/your/host/source/path"
      destination: "/your/path/inside/the/container"

# multiple server configuration
lsp:
  server:
    - type: ...
      subtype: ...
      ...                       # keys as in the classic single server case, e.g. type, subtype, etc...
    - ...                       # other single server configuration(s)
  mappings:                     # shared among all servers
    - source: <path-on-host>
      destination: <path-on-lang-server>
    ...                         # other mappings
